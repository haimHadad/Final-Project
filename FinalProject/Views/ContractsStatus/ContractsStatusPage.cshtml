@model FinalProject.Models.DappAccount
@{
    ViewData["Title"] = "ContractsStatus";
    Layout = "/Views/Shared/_LayoutAccount.cshtml";
}

<br />
<h1>Contracts Status</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" data-toggle="tab" href="#OpenContractsTab">Open Contracts</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#ClosedContractsTab">Closed Contracts</a>
    </li>

</ul>

<br />
<br />

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active show" id="OpenContractsTab">

        <table class=" table table-hover">
            <thead align="center">
                <tr>
                    <th scope="col">Loaction</th>
                    <th scope="col">Your Role</th>
                    <th scope="col">Tracking</th>
                    <th scope="col">Action</th>

                </tr>
            </thead>
            <tbody align="center">
                @foreach (var a in @Model.DeployedContractList)
                {

                    if (Model.publicKey.ToLower().Equals(a.BuyerPublicKey) && a.IsDeniedByBuyer == false && a.BuyerSign == false) //if I am a buyer, and I didn`t sign
                    {
                        var OfferSerialModel = Newtonsoft.Json.JsonConvert.SerializeObject(a);
                        var btnID = "openContract" + a.AssetID;
                        var lblID = "resultOpenContract" + a.AssetID;
                        <tr>
                            <td>@a.Loaction</td>
                            <td>Buyer</td>
                            <td><a target="_blank" href=@a.EtherscanURL>Here</a></td>
                            <td>
                            <button id=@btnID onclick="LoadOpenContractDetails(@OfferSerialModel)" class="btn btn-primary" data-toggle="modal" data-target="#openContractModalDialong">Open Contract</button>
                            <label style="display:none;" id=@lblID></label>
                            </td>
                        </tr>
                    }

                    if (Model.publicKey.ToLower().Equals(a.SellerPublicKey) && a.IsDeniedByBuyer == false && a.BuyerSign == false) //if I am a seller
                    {
                        var OfferSerialModel = Newtonsoft.Json.JsonConvert.SerializeObject(a);

                        <tr>
                            <td>@a.Loaction</td>
                            <td>Seller</td>
                            <td><a target="_blank" href=@a.EtherscanURL>Here</a></td>
                            @{
                                if (a.TimeToBeOpen > 0)
                                {
                                    var idAwaitForBuyer = "AwaitFor" + a.AssetID;
                                    <td><label id=@idAwaitForBuyer>Awaiting for buyer signing </label></td>
                                }
                                else
                                {
                                    <td><button onclick="CancelContract(@OfferSerialModel)" class="btn btn-danger" data-toggle="modal" data-target="#cloasedContractModalDialong">Cancel Contract</button></td>
                                }
                            }

                        </tr>
                    }

                    if (a.BuyerSign == true && a.RegulatorSign == false && a.IsDeniedByRegulator == false) //if I am a buyer, and I didn`t sign
                    {
                        var OfferSerialModel = Newtonsoft.Json.JsonConvert.SerializeObject(a);

                        <tr>
                            <td>@a.Loaction</td>
                            @{
                                if (a.SellerPublicKey.ToLower().Equals(a.SellerPublicKey))
                                {
                                    <td>Seller</td>
                                }
                                else
                                {
                                    <td>Buyer</td>
                                }
                            }

                            <td><a target="_blank" href=@a.EtherscanURL>Here</a></td>
                            <td>Awaiting for regulator signing</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <div class="modal fade" id="openContractModalDialong" tabindex="-1" role="dialog" aria-labelledby="openContractModalDialongTitle" aria-hidden="true" style="">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="closedContractDialogTitle">Contract Offer</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="openContract_dialog_body">
                        <center><img class="w-50 p-3" id="openContractImageURL"></center>
                        <p id="openContractdialogAssetID"></p>
                        <p id="openContractdialogLoaction"></p>
                        <p id="openContractdialogAreaIn"></p>
                        <p id="openContractdialogRooms"></p>
                        <p id="openContractdialogPrice"></p>
                        <p id="">------------------------------------</p>
                        <p id="openContractdialogOwnerID"></p>
                        <p id="openContractdialogOwnerPublicKey"></p>
                        <p id="">------------------------------------</p>
                        <p id="openContractdialogBuyerID"></p>
                        <p id="openContractdialogBuyerPublicKey"></p>
                        <p id="">------------------------------------</p>

                        <input onclick="AllowNotes()" type="checkbox" id="openContractCheckBos"  > Add Deny Notes<br>
                        <textarea disabled id="openContractdialogNotes" rows="4" cols="50"></textarea>

                    </div>
                    <div class="modal-footer">
                        <button id="openContractDenyBtn" type="button" class="btn btn-danger" data-dismiss="modal">Deny</button>
                        <button id="openContractSignBtn" type="button" class="btn btn-success" data-dismiss="modal">Sign</button>
                    </div>
                </div>
            </div>
</div>



        </div> <!--End of Open contracts tab-->

        <div class="tab-pane fade" id="ClosedContractsTab">

            <table class=" table table-hover">
                <thead align="center">
                    <tr>
                        <th scope="col">Loaction</th>
                        <th scope="col">Your Role</th>
                        <th scope="col">Tracking</th>
                        <th scope="col">Result</th>

                    </tr>
                </thead>
                <tbody align="center">
                    @foreach (var a in @Model.DeployedContractList)
                    {
                        if (a.RegulatorSign == true || a.IsDeniedByBuyer == true || a.IsDeniedByRegulator == true)
                        {
                            var role = "";
                            var yourPublicKey = Model.publicKey;
                            if (yourPublicKey.Equals(a.SellerPublicKey))
                                role = "Seller";
                            else
                                role = "Buyer";
                            var OfferSerialModel = Newtonsoft.Json.JsonConvert.SerializeObject(a);
                            <tr>
                                <td>@a.Loaction</td>
                                <td>@role</td>
                                <td><a target="_blank" href=@a.EtherscanURL>Here</a></td>
                                <td><button onclick="LoadClosedContractDetails(@OfferSerialModel)" class="btn btn-primary" data-toggle="modal" data-target="#closedContractModalDialong">View Details</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>


            <div class="modal fade" id="closedContractModalDialong" tabindex="-1" role="dialog" aria-labelledby="closedContractModalDialongTitle" aria-hidden="true" style="">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title" id="closedContractDialogTitle">Closed Contract</h4>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" id="closedContract_dialog_body">
                            <center><img class="w-50 p-3" id="closedContractImageURL"></center>
                            <p id="closedContractdialogAssetID"></p>
                            <p id="closedContractdialogLoaction"></p>
                            <p id="closedContractdialogAreaIn"></p>
                            <p id="closedContractdialogRooms"></p>
                            <p id="closedContractdialogPrice"></p>
                            <p id="">------------------------------------</p>
                            <p id="closedContractdialogOwnerID"></p>
                            <p id="closedContractdialogOwnerPublicKey"></p>
                            <p id="">------------------------------------</p>
                            <p id="closedContractdialogBuyerID"></p>
                            <p id="closedContractdialogBuyerPublicKey"></p>
                            <p id="">------------------------------------</p>
                            <p id="closedContractdialogNewOwnerID"></p>
                            <p id="closedContractdialogNewOwnerPublicKey"></p>
                            <h5 id="closedContractdialogResult"></h5>
                            <textarea id="closedContractdialogNotes" rows="4" cols="50"></textarea>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>



        </div> <!--End of closed contracts tab-->

    </div>


@section scripts
    {

    <script type="text/javascript">

        $(document).ready(function () {
            document.getElementById("contractsStatusNavBar").style.textDecoration = "underline";
            document.getElementById("contractsStatusNavBar").style.fontWeight = "bold";
        });

        function AllowNotes()
        { 
            checkBox = document.getElementById("openContractCheckBos").checked;
            if (checkBox == true)
            {
                
                $('#openContractSignBtn').disabled = true;
                document.getElementById("openContractdialogNotes").placeholder = "Add your notes";
                document.getElementById("openContractdialogNotes").value = "";
                document.getElementById("openContractdialogNotes").disabled = false;
                document.getElementById("openContractSignBtn").disabled = true;
            }

            else
            {
                document.getElementById("openContractdialogNotes").disabled = true;
                document.getElementById("openContractdialogNotes").placeholder = "";
                document.getElementById("openContractdialogNotes").value = "";
                document.getElementById("openContractSignBtn").disabled = false;
            }
        }


        function LoadOpenContractDetails(offer)
        {
            var fullOwnerPublicKey = offer.SellerPublicKey;
            var partOne = fullOwnerPublicKey.substring(0, 12);
            var partTwo = " . . . ";
            var partThree = fullOwnerPublicKey.substring(32, fullOwnerPublicKey.length);
            var ownerPublicKeyToShow = "" + partOne + partTwo + partThree;

            var fullBuyerPublicKey = offer.BuyerPublicKey;
            partOne = fullBuyerPublicKey.substring(0, 12);
            partTwo = " . . . ";
            partThree = fullBuyerPublicKey.substring(32, fullBuyerPublicKey.length);
            var buyerPublicKeyToShow = "" + partOne + partTwo + partThree;

            var newOwnerPublicKey = offer.NewOwnerPublicKey;
            var yourPublicKey = @Model.publicKey;
            var sellerPublicKey = ownerPublicKeyToShow;
            var sellerID = offer.OwnertID;
            var buyerPublicKey = buyerPublicKeyToShow;
            var buyerID = offer.BuyerID;

            if (yourPublicKey == offer.SellerPublicKey) {
                sellerPublicKey = sellerPublicKey + "  &nbsp (You)";
                sellerID = sellerID + " &nbsp (You)";
            }

            else
            {
                buyerPublicKey = buyerPublicKey + "  &nbsp (You)";
                buyerID = buyerID + " &nbsp (You)";
            }

            document.getElementById("openContractImageURL").setAttribute("src", offer.ImageURL);
            document.getElementById("openContractdialogAssetID").innerHTML = "Asset No : ".bold() + offer.AssetID;
            document.getElementById("openContractdialogLoaction").innerHTML = "Loaction : ".bold() + offer.Loaction;
            document.getElementById("openContractdialogAreaIn").innerHTML = "AreaIn : ".bold() + offer.AreaIn +"&nbsp m^2";
            document.getElementById("openContractdialogRooms").innerHTML = "Rooms : ".bold() + offer.Rooms;
            document.getElementById("openContractdialogOwnerID").innerHTML = "Seller ID : ".bold() + sellerID;
            document.getElementById("openContractdialogOwnerPublicKey").innerHTML = "Seller Public-Key : ".bold() + sellerPublicKey;
            document.getElementById("openContractdialogBuyerID").innerHTML = "Buyer ID : ".bold() + buyerID;
            document.getElementById("openContractdialogBuyerPublicKey").innerHTML = "Buyer Public-Key : ".bold() + buyerPublicKey;           

        }


        function LoadClosedContractDetails(offer)
        {
            var fullOwnerPublicKey = offer.SellerPublicKey;
            var partOne = fullOwnerPublicKey.substring(0, 12);
            var partTwo = " . . . ";
            var partThree = fullOwnerPublicKey.substring(32, fullOwnerPublicKey.length);
            var ownerPublicKeyToShow = "" + partOne + partTwo + partThree;

            var fullBuyerPublicKey = offer.BuyerPublicKey;
            partOne = fullBuyerPublicKey.substring(0, 12);
            partTwo = " . . . ";
            partThree = fullBuyerPublicKey.substring(32, fullBuyerPublicKey.length);
            var buyerPublicKeyToShow = "" + partOne + partTwo + partThree;

            var newOwnerPublicKey = offer.NewOwnerPublicKey;
            var yourPublicKey = @Model.publicKey;
            var sellerPublicKey = ownerPublicKeyToShow;
            var sellerID = offer.OwnertID;
            var buyerPublicKey = buyerPublicKeyToShow;
            var buyerID = offer.BuyerID;

            if (yourPublicKey == offer.SellerPublicKey) {
                sellerPublicKey = sellerPublicKey + "  &nbsp (You)";
                sellerID = sellerID + " &nbsp (You)";
            }

            else
            {
                buyerPublicKey = buyerPublicKey + "  &nbsp (You)";
                buyerID = buyerID + " &nbsp (You)";
            }

            document.getElementById("closedContractImageURL").setAttribute("src", offer.ImageURL);
            document.getElementById("closedContractdialogAssetID").innerHTML = "Asset No : ".bold() + offer.AssetID;
            document.getElementById("closedContractdialogLoaction").innerHTML = "Loaction : ".bold() + offer.Loaction;
            document.getElementById("closedContractdialogAreaIn").innerHTML = "AreaIn : ".bold() + offer.AreaIn +"&nbsp m^2";
            document.getElementById("closedContractdialogRooms").innerHTML = "Rooms : ".bold() + offer.Rooms;
            document.getElementById("closedContractdialogOwnerID").innerHTML = "Seller ID : ".bold() + sellerID;
            document.getElementById("closedContractdialogOwnerPublicKey").innerHTML = "Seller Public-Key : ".bold() + sellerPublicKey;
            document.getElementById("closedContractdialogBuyerID").innerHTML = "Buyer ID : ".bold() + buyerID;
            document.getElementById("closedContractdialogBuyerPublicKey").innerHTML = "Buyer Public-Key : ".bold() + buyerPublicKey;
            document.getElementById("closedContractdialogNotes").innerHTML = ""+offer.DenyReason;
            
            if (offer.RegulatorSign == true)
            {
                var newOwnerID = offer.NewOwnerID;
                partOne = newOwnerPublicKey.substring(0, 12);
                partTwo = " . . . ";
                partThree = newOwnerPublicKey.substring(32, newOwnerPublicKey.length);
                var newOwnerPublicKeyToShow = "" + partOne + partTwo + partThree;
                if (yourPublicKey == offer.NewOwnerPublicKey)
                {
                newOwnerPublicKeyToShow = newOwnerPublicKeyToShow + "  &nbsp (You)";
                newOwnerID = newOwnerID + "  &nbsp (You)";
                }
                document.getElementById("closedContractdialogNewOwnerID").innerHTML = "New Owner Public-key: ".bold() + newOwnerID;
                document.getElementById("closedContractdialogNewOwnerPublicKey").innerHTML = "New Owner ID : ".bold() +newOwnerPublicKeyToShow ;
                document.getElementById("closedContractdialogResult").innerHTML = "Approved".bold();
                document.getElementById("closedContractdialogResult").style.color = "green";
                document.getElementById("closedContractdialogPrice").innerHTML = "Price : ".bold() + offer.PriceETH + " ETH / ₪" + offer.PriceILS;
                document.getElementById("closedContractdialogNotes").style.display = "none";   
            }
            

            else if (offer.IsDeniedByBuyer == true)
            {
                document.getElementById("closedContractdialogResult").innerHTML = "Denied By Buyer".bold();
                document.getElementById("closedContractdialogResult").style.color = "red";
                document.getElementById("closedContractdialogNotes").style.display = "block";
                document.getElementById("closedContractdialogPrice").innerHTML = "";
                document.getElementById("closedContractdialogNewOwnerID").innerHTML = "";
                document.getElementById("closedContractdialogNewOwnerPublicKey").innerHTML = "";

            }

            else if (offer.IsDeniedByRegulator == true)
            {
                document.getElementById("closedContractdialogResult").innerHTML = "Denied By Regulator".bold();
                document.getElementById("closedContractdialogResult").style.color = "red";
                document.getElementById("closedContractdialogNotes").style.display = "block";
                document.getElementById("closedContractdialogPrice").innerHTML = "";
                document.getElementById("closedContractdialogNewOwnerID").innerHTML = "";
                document.getElementById("closedContractdialogNewOwnerPublicKey").innerHTML = "";
            }

        }




    var interval;
    function setTimer(timeLeftInSeconds, labelID)
    {

        clearInterval(interval)

        var timeSpan = convert(timeLeftInSeconds);
        //var countDownDate = new Date("Jan 5, 2021 15:37:25").getTime();
        var countDownDate = new Date(timeSpan).getTime();
    
        // Update the count down every 1 second
        interval = setInterval(function() 
        {
            // Get today's date and time
            var now = new Date().getTime();
    
            // Find the distance between now and the count down date
            var distance = countDownDate - now;
    
            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    
            // Output the result in an element with id="demo"
            //document.getElementById("demo").innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";
            document.getElementById(labelID).innerHTML = days + "d " + hours + "h " + minutes + "m " + seconds + "s ";

    
            // If the count down is over, write some text 
            if (distance < 0)
            {
                clearInterval(interval);
                //document.getElementById("demo").innerHTML = "EXPIRED";
                document.getElementById(labelID).innerHTML = "EXPIRED";

            }
            }, 1000);


    }

    function convert(unixtimestamp)
    {
        var now = new Date(unixtimestamp)  
        var secondsSinceEpoch = Math.round(now.getTime() / 1000)  

        // Unixtimestamp
        //var unixtimestamp = document.getElementById('timestamp').value;
        if(typeof unixtimestamp =="string")
            unixtimestamp = parseInt(unixtimestamp);
        secondsSinceEpoch = parseInt(secondsSinceEpoch);
        unixtimestamp = unixtimestamp +  secondsSinceEpoch;
        // Months array
        var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];

        // Convert timestamp to milliseconds
        var date = new Date(unixtimestamp*1000);

        // Year
        var year = date.getFullYear();

        // Month
        var month = months_arr[date.getMonth()];

        // Day
        var day = date.getDate();

        // Hours
        var hours = date.getHours();

        // Minutes
        var minutes = "0" + date.getMinutes();

        // Seconds
        var seconds = "0" + date.getSeconds();

        // Display date time in MM-dd-yyyy h:m:s format
        var convdataTime = month+' '+day+', '+year+' '+hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
        //"Jan 5, 2021 15:37:25"
        document.getElementById('datetime').innerHTML = convdataTime;
        return convdataTime;
    }

        </script>
    }